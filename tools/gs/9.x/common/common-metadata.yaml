identifier: TL_1d8d5e.d7
name: gs
softwareVersion:
  versionName: 9.x
  includedVersions:
    - 9.26
metadataStatus: Released
featureList:
  - __main__
description: "gs - Ghostscript (PostScript and PDF language interpreter and previewer)\n\
  The  gs  command  invokes  Ghostscript, an interpreter of Adobe Systems' PostScript(tm)\
  \ and Portable Document Format (PDF) languages. gs reads \"files\" in sequence and\
  \ executes them as Ghostscript programs. After doing this, it reads further input\
  \ from the standard input stream (normally the keyboard), interpreting each line\
  \ separately and output to an output device (may be a file or an X11 window preview,\
  \ see below). The interpreter exits gracefully when it encounters the \"quit\" command\
  \ (either in a file or from the keyboard), at end-of-file, or at an interrupt signal\
  \ (such  as Control-C at the keyboard).\nThe  interpreter recognizes many option\
  \ switches, some of which are described below. Please see the usage documentation\
  \ for complete information. Switches may appear anywhere in the command line and\
  \ apply to all files thereafter. Invoking Ghostscript with the -h or -? switch produces\
  \ a message which shows several useful switches, all the devices known to that executable,\
  \ and the search path for fonts; on Unix it also shows the location of detailed\
  \ documentation.\nGhostscript may be built to use many different output devices.\
  \  To see which devices your executable includes, run \"gs -h\".\nUnless you specify\
  \ a particular device, Ghostscript normally opens the first one of those and directs\
  \ output to it.\nIf you have installed the ghostscript-x Debian package and are\
  \ under X, the default device is an X11 window (previewer), else ghostscript will\
  \ use the bbox device and print on stdout the dimension of the postscript file.\n\
  So if the first one in the list is the one you want to use, just issue the command\n\
  \n     gs myfile.ps\n\nYou can also check the set of available devices from within\
  \ Ghostscript: invoke Ghostscript and type\n\n     devicenames ==\n\nbut the first\
  \ device on the resulting list may not be the default device you determine with\
  \ \"gs -h\".  To specify \"AbcXyz\" as the initial output device, include the switch\n\
  \n     -sDEVICE=AbcXyz\n\nFor example, for output to an Epson printer you might\
  \ use the command\n\n     gs -sDEVICE=epson myfile.ps\n\nThe \"-sDEVICE=\" switch\
  \ must precede the first mention of a file to print, and only the switch's first\
  \ use has any effect.\nFinally, you can specify a default device in the environment\
  \ variable GS_DEVICE.  The order of precedence for these alternatives from highest\
  \ to lowest (Ghostscript uses the device defined highest in the list) is:\nSome\
  \ devices can support different resolutions (densities).  To specify the resolution\
  \ on such a printer, use the \"-r\" switch:\n\n     gs -sDEVICE=<device> -r<xres>x<yres>\n\
  \nFor example, on a 9-pin Epson-compatible printer, you get the lowest-density (fastest)\
  \ mode with\n\n     gs -sDEVICE=epson -r60x72\n\nand the highest-density (best output\
  \ quality) mode with\n\n     gs -sDEVICE=epson -r240x72.\n\nIf you select a printer\
  \ as the output device, Ghostscript also allows you to choose where Ghostscript\
  \ sends the output -- on Unix systems, usually to a temporary file.  To send the\
  \ output to a file \"foo.xyz\", use the switch\n\n     -sOutputFile=foo.xyz\n\n\
  You might want to print each page separately. To do this, send the output to a series\
  \ of files \"foo1.xyz, foo2.xyz, ...\" using the \"-sOutputFile=\" switch with \"\
  %d\" in a filename template:\n\n     -sOutputFile=foo%d.xyz\n\nEach resulting file\
  \ receives one page of output, and the files are numbered in sequence. \"%d\" is\
  \ a printf format specification; you can also use a variant like \"%02d\".\nYou\
  \ can also send output to a pipe. For example, to pipe output to the \"lpr\" command\
  \ (which, on many Unix systems, directs it to a printer), use the option\n\n   \
  \  -sOutputFile=%pipe%lpr\n\nYou can also send output to standard output:\n\n  \
  \   -sOutputFile=-\nor\n     -sOutputFile=%stdout%\n\nIn this case you must also\
  \ use the -q switch, to prevent Ghostscript from writing messages to standard output.\n\
  To select a specific paper size, use the command line switch\n\n     -sPAPERSIZE=<paper_size>\n\
  \nfor instance\n\n     -sPAPERSIZE=a4\nor\n     -sPAPERSIZE=legal\n\nMost ISO and\
  \ US paper sizes are recognized. See the usage documentation for a full list, or\
  \ the definitions in the initialization file \"gs_statd.ps\".\nGhostscript can do\
  \ many things other than print or view PostScript and PDF files. For example, if\
  \ you want to know the bounding box of a PostScript (or EPS) file, Ghostscript provides\
  \ a special \"device\" that just prints out this information.\nFor example, using\
  \ one of the example files distributed with Ghostscript,\n\n     gs -sDEVICE=bbox\
  \ golfer.ps\n\nprints out\n\n     %%BoundingBox: 0 25 583 732\n     %%HiResBoundingBox:\
  \ 0.808497 25.009496 582.994503 731.809445"
codeRepository:
  URL: https://git.ghostscript.com/
  name:
license: AGPL-3.0-or-later
WebSite:
  - description: homepage
    URL: https://www.ghostscript.com/index.html
    name:
contactPoint:
  - email:
    name: Artifex Software, Inc.
    identifier:
publication:
  - headline:
    identifier:
keywords:
  - name:
    category:
alternateName: Ghostscript
creator:
  - email:
    name:
    identifier:
programmingLanguage:
datePublished:
downloadURL:
extra:
